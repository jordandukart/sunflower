<?php

function sunflower_menu() {
  $items = array();
  $items['sunflower'] = array(
    'title' => 'Sunflower Submission',
    'description' => 'Submission process for CSSR',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('sunflower_landing_form'),
    'access callback' => TRUE,
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

function sunflower_landing_form($form, &$form_state) {
  if (FALSE) {
    // @TODO Get some variable from a config page that specifies a closing date.
    dsm('some date shit');
  }
  elseif (sunflower_is_valid_submitter()) {
    $form = array(
      '#tree' => TRUE,
    );
    if (FALSE) {
      // @TODO: Check to see if they already have submitted a proposal
    }
    $form['proposal_type'] = array(
      '#type' => 'fieldset',
      '#title' => t('Proposal Type'),
      '#collapsed' => FALSE,
      '#collapsible' => FALSE,
    );
    $form['proposal_type']['proposal_choices'] = array(
      '#type' => 'radios',
      '#title' => t('Proposal type'),
      '#default_value' => 'individual',
      '#options' => array(
        'individual' => t('Individual Paper'),
        'panel' => t('Panel Session'),
        'roundtable' => t('Roundtable Session'),
        'workshop' => t('Workshop Session'),
      ),
    );
    $form['proposal_type']['panel_description'] = array(
      '#type' => 'item',
      '#markup' => t('A Panel Session proposal is a proposal for a complete session of different papers on a theme, complete with a presider, multiple papers, and (optionally) a respondent. A Short abstract and a longer description is required for each paper in the session. Presenters in a Panel Session must submit their proposals to the Panel Session organizer, who in turn is responsible for inputting them into our Sunflower system.'),
      '#states' => array(
        'visible' => array(
          ':input[name="proposal_type[proposal_choices]"]' => array('value' => 'panel'),
        ),
      ),
    );
    $form['proposal_type']['roundtable_description'] = array(
      '#type' => 'item',
      '#markup' => t('A Roundtable Session Proposal is a proposal of a complete session, including a presider, a list of panelists, and (optionally) a respondent, all of whom will speak (ex tempore) on a common theme.'),
      '#states' => array(
        'visible' => array(
          ':input[name="proposal_type[proposal_choices]"]' => array('value' => 'roundtable'),
        ),
      ),
    );
    $form['proposal_type']['workshop_description'] = array(
      '#type' => 'item',
      '#markup' => t('A Workshop Session Proposal includes up to eight papers circulated in advance on a common theme.'),
      '#states' => array(
        'visible' => array(
          ':input[name="proposal_type[proposal_choices]"]' => array('value' => 'workshop'),
        ),
      ),
    );
    $form['optional_individual'] = array(
      '#type' => 'fieldset',
      '#collapsed' => FALSE,
      '#collapsible' => FALSE,
      '#weight' => 123,
      '#title' => t('Section C TBD'),
      '#description' => t('Indicate three broad thematic groups which your proposal might fall under'),
      '#states' => array(
        'visible' => array(
          ':input[name="proposal_type[proposal_choices]"]' => array('value' => 'individual'),
        ),
      ),
    );
    $form['proposal_details'] = array(
      '#type' => 'fieldset',
      '#collapsed' => FALSE,
      '#collapsible' => FALSE,
      '#title' => t('Proposal Details'),
    );
    $form['proposal_details']['description'] = array(
      '#type' => 'textfield',
      '#title' => t('Description of Proposal for Program Review'),
      '#description' => t('Maximum of 150 words'),
    );
    $form['proposal_details']['panel_roundtable_workshop_title'] = array(
      '#type' => 'textfield',
      '#title' => t('Panel, Roundtable or Workshop Title'),
      '#description' => t('Maximum of 100 characters'),
      '#maxlength' => 100,
      '#states' => array(
        'visible' => array(
          ':input[name="proposal_type[proposal_choices]"]' => array('!value' => 'individual'),
        ),
      ),
    );
    $form['proposal_details']['presider_chair'] = array(
      '#type' => 'textfield',
      '#title' => t('Full name of Presider/Chair'),
      '#description' => t('Who is presiding over this panel, roundtable or workshop?'),
      '#states' => array(
        'visible' => array(
          ':input[name="proposal_type[proposal_choices]"]' => array('!value' => 'individual'),
        ),
      ),
    );
    $form['proposal_details']['special_requests'] = array(
      '#type' => 'textarea',
      '#title' => t('Special Requests'),
    );
    $form['proposal_details']['av_requests'] = array(
      '#type' => 'textarea',
      '#title' => t('AV Requests'),
    );


    for ($i = 0; $i < 8; $i++) {
      $key = "presenter_name_$i";
      $form['fieldset_' . $i] = array(
        '#type' => 'fieldset',
        '#collapsed' => FALSE,
        '#collapsible' => FALSE,
        '#title' => t('Presenter @num', array('@num' => $i + 1)),
      );
      $name_parts = array(
        'last_name',
        'first_name',
        'initials,'
      );
      foreach ($name_parts as $key) {
        if ($key == 'last_name') {
          $title = t('Last Name');
        }
        elseif ($key == 'first_name') {
          $title = t('First Name');
        }
        else {
          $title = t('Initials');
        }
        $form['fieldset_' . $i][$key] = array(
          '#type' => 'textfield',
          '#title' => $title,
        );
      }
      $form['fieldset_' . $i]['paper_title'] = array(
        '#type' => 'textfield',
        '#title' => t('Paper Title'),
        '#description' => t('Maximum of 100 characters'),
        '#maxlength' => 100,
      );
      $form['fieldset_' . $i]['abstract'] = array(
        '#type' => 'textfield',
        '#title' => t('Abstract for Conference Program'),
        '#description' => t('Maximum of 150 words'),
      );
      if ($i >= 1 && $i < 4) {
        $form['fieldset_' . $i]['#states'] = array(
          'visible' => array(
            ':input[name="proposal_type[proposal_choices]"]' => array('!value' => 'individual'),
          ),
        );
      }
      if ($i >= 4 && $i < 8) {
        $form['fieldset_' . $i]['#states'] = array(
          'visible' => array(
            ':input[name="proposal_type[proposal_choices]"]' => array('value' => 'workshop'),
          ),
        );
      }
    }
    $form['submit'] = array(
      '#type' => 'submit',
      '#value' => t('Submit'),
      '#weight' => 150,
    );
    // @TODO: Submitted by bullshit.
    return $form;
  }
  else {
    drupal_set_message(t('Sorry you do not appear to be eligible to submit a proposal! Proposal submission is only available for paid members or friends of the CSSR.'), 'warning');
  }
}

function sunflower_landing_form_validate($form, &$form_state) {

}

function sunflower_is_valid_submitter() {
  global $user;
  $user_type = db_select('field_data_field_membership_type', 'f')
    ->fields('f', array('field_membership_type_value'))
    ->condition('f.entity_id', $user->uid, '=')
    ->execute()
    ->fetchCol();
  if (count($user_type) && $user_type[0] != 'friend') {
    return TRUE;
  }
  else {
    return FALSE;
  }
}
